---
import { readItems, refresh } from "@directus/sdk";
import { directusClient, $refreshToken } from "@foxdriven/scripts/directus";
import isProd from "@common/scripts/tools";

import MainLayout from "@foxdriven/layouts/MainLayout.astro";
import ArticleCard from "@foxdriven/components/ArticleCard.astro";
import PageNavigationButton from "@foxdriven/components/PageNavigationButton.astro";

const { page } = Astro.params;
const pageValue = parseInt(page ? page : "0");
const pageSize = 6;

let articles: Record<string, any>[] = [];
let query = {};

if (isProd(Astro.url.toString())) {
  query = {
    filter: {
      prod: {
        _eq: true,
      },
    },
    sort: ["-year", "title"],
  };
} else {
  query = {
    sort: ["-year", "title"],
  };
}

let failed = false;
try {
  articles = await directusClient.request(readItems("articles", query));
} catch (e) {
  const result = await directusClient.request(
    refresh("json", $refreshToken.get()),
  );
  $refreshToken.set(result["refresh_token"]?.toString());
  failed = true;
} finally {
  if (failed) {
    articles = await directusClient.request(readItems("articles", query));
  }
}

let prevPage = "/blog/" + Math.max(1, pageValue - 1).toString();
let curPage = "/blog/" + pageValue.toString();
let nextPage =
  "/blog/" +
  Math.min(Math.ceil(articles.length / pageSize), pageValue + 1).toString();

const isFirstPage = pageValue == 1 ? "hidden" : "visible";
const isLastPage =
  pageValue == Math.ceil(articles.length / pageSize) ? "hidden" : "visible";

const articlesPaginated = articles.slice(
  (pageValue - 1) * pageSize,
  pageValue * pageSize,
);
---

<MainLayout page_title="Блог" page_description="Все публикации">
  <div class="mx-auto w-[80%] p-8 md:w-full">
    <div
      class="mx-auto grid max-w-7xl grid-cols-1 justify-between gap-8 md:grid-cols-2"
    >
      {
        articlesPaginated.map((article) => {
          return (
            <ArticleCard
              title={article.title}
              prod={article.prod}
              slug={article.slug}
              year={article.year}
              url={article.url}
              tags={article.tags}
              description={article.description}
            />
          );
        })
      }
    </div>
    <div class="mt-4 flex flex-row justify-center gap-4">
      <div class={isFirstPage}>
        <PageNavigationButton text="< сюда" link={prevPage} />
      </div>
      <PageNavigationButton text={page} link={curPage} />
      <div class={isLastPage}>
        <PageNavigationButton text="туда >" link={nextPage} />
      </div>
    </div>
  </div>
</MainLayout>
