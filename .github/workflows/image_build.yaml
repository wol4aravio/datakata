name: Image Build

on:
  push:
    branches:
      - main
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  RUNTIME_ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
  BUILD_SUFFIX: ${{ github.ref == 'refs/heads/master' && '' || 'dev-' }}

jobs:
  build:
    strategy:
      matrix:
        site: [bigdatawhale, cyberpony, datakata, foxdriven, panovskiy]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get env vars
        uses: cardinalby/export-env-action@v2
        with:
          envFile: "env_files/${{ matrix.site }}.env"
          expand: "true"
      - name: Show default environment variables
        run: |
          echo "ref: ${{ github.ref }}"
          echo "website: ${{ env.WEBSITE }}"
          echo "suffix: ${{ env.BUILD_SUFFIX }}"
          echo "version: ${{ env.VERSION }}"
      - name: Check version
        uses: tyriis/docker-image-tag-exists@v2.0.0
        id: image_exists
        with:
          registry: ghcr.io/wol4aravio
          repository: ${{ env.WEBSITE }}
          tag: ${{ env.BUILD_SUFFIX }}${{ env.VERSION }}
      - name: Build website
        uses: docker/build-push-action@v5
        if: steps.image_exists.outputs.tag == 'not found'
        with:
          context: .
          file: docker/images/web.Dockerfile
          target: ${{ matrix.site }}
          push: true
          platforms: linux/amd64
          tags: ghcr.io/wol4aravio/${{ env.WEBSITE }}:${{ env.BUILD_SUFFIX }}${{ env.VERSION }}
          build-args: |
            CMS_URL=${{ secrets.CMS_URL }}
            CMS_USER=${{ secrets.CMS_USER }}
            CMS_PASSWORD=${{ secrets.CMS_PASSWORD }}
          labels: |
            website=${{ env.WEBSITE }}
            env=${{ env.RUNTIME_ENVIRONMENT }}
            version=${{ env.VERSION }}
